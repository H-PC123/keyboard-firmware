   1               		.file	"keyboard.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.keyboard_setup,"ax",@progbits
  11               	.global	keyboard_setup
  13               	keyboard_setup:
  14               	.LFB4:
  15               		.file 1 "../../tmk_core/common/keyboard.c"
   1:../../tmk_core/common/keyboard.c **** /*
   2:../../tmk_core/common/keyboard.c **** Copyright 2011,2012,2013 Jun Wako <wakojun@gmail.com>
   3:../../tmk_core/common/keyboard.c **** 
   4:../../tmk_core/common/keyboard.c **** This program is free software: you can redistribute it and/or modify
   5:../../tmk_core/common/keyboard.c **** it under the terms of the GNU General Public License as published by
   6:../../tmk_core/common/keyboard.c **** the Free Software Foundation, either version 2 of the License, or
   7:../../tmk_core/common/keyboard.c **** (at your option) any later version.
   8:../../tmk_core/common/keyboard.c **** 
   9:../../tmk_core/common/keyboard.c **** This program is distributed in the hope that it will be useful,
  10:../../tmk_core/common/keyboard.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:../../tmk_core/common/keyboard.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:../../tmk_core/common/keyboard.c **** GNU General Public License for more details.
  13:../../tmk_core/common/keyboard.c **** 
  14:../../tmk_core/common/keyboard.c **** You should have received a copy of the GNU General Public License
  15:../../tmk_core/common/keyboard.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:../../tmk_core/common/keyboard.c **** */
  17:../../tmk_core/common/keyboard.c **** #include <stdint.h>
  18:../../tmk_core/common/keyboard.c **** #include "keyboard.h"
  19:../../tmk_core/common/keyboard.c **** #include "matrix.h"
  20:../../tmk_core/common/keyboard.c **** #include "keymap.h"
  21:../../tmk_core/common/keyboard.c **** #include "host.h"
  22:../../tmk_core/common/keyboard.c **** #include "led.h"
  23:../../tmk_core/common/keyboard.c **** #include "keycode.h"
  24:../../tmk_core/common/keyboard.c **** #include "timer.h"
  25:../../tmk_core/common/keyboard.c **** #include "print.h"
  26:../../tmk_core/common/keyboard.c **** #include "debug.h"
  27:../../tmk_core/common/keyboard.c **** #include "command.h"
  28:../../tmk_core/common/keyboard.c **** #include "util.h"
  29:../../tmk_core/common/keyboard.c **** #include "sendchar.h"
  30:../../tmk_core/common/keyboard.c **** #include "bootmagic.h"
  31:../../tmk_core/common/keyboard.c **** #include "eeconfig.h"
  32:../../tmk_core/common/keyboard.c **** #include "backlight.h"
  33:../../tmk_core/common/keyboard.c **** #include "hook.h"
  34:../../tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
  35:../../tmk_core/common/keyboard.c **** #   include "mousekey.h"
  36:../../tmk_core/common/keyboard.c **** #endif
  37:../../tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  38:../../tmk_core/common/keyboard.c **** #   include "ps2_mouse.h"
  39:../../tmk_core/common/keyboard.c **** #endif
  40:../../tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  41:../../tmk_core/common/keyboard.c **** #include "serial_mouse.h"
  42:../../tmk_core/common/keyboard.c **** #endif
  43:../../tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  44:../../tmk_core/common/keyboard.c **** #include "adb.h"
  45:../../tmk_core/common/keyboard.c **** #endif
  46:../../tmk_core/common/keyboard.c **** 
  47:../../tmk_core/common/keyboard.c **** 
  48:../../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
  49:../../tmk_core/common/keyboard.c **** static bool has_ghost_in_row(uint8_t row)
  50:../../tmk_core/common/keyboard.c **** {
  51:../../tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = matrix_get_row(row);
  52:../../tmk_core/common/keyboard.c ****     // No ghost exists when less than 2 keys are down on the row
  53:../../tmk_core/common/keyboard.c ****     if (((matrix_row - 1) & matrix_row) == 0)
  54:../../tmk_core/common/keyboard.c ****         return false;
  55:../../tmk_core/common/keyboard.c **** 
  56:../../tmk_core/common/keyboard.c ****     // Ghost occurs when the row shares column line with other row
  57:../../tmk_core/common/keyboard.c ****     for (uint8_t i=0; i < MATRIX_ROWS; i++) {
  58:../../tmk_core/common/keyboard.c ****         if (i != row && (matrix_get_row(i) & matrix_row))
  59:../../tmk_core/common/keyboard.c ****             return true;
  60:../../tmk_core/common/keyboard.c ****     }
  61:../../tmk_core/common/keyboard.c ****     return false;
  62:../../tmk_core/common/keyboard.c **** }
  63:../../tmk_core/common/keyboard.c **** #endif
  64:../../tmk_core/common/keyboard.c **** 
  65:../../tmk_core/common/keyboard.c **** 
  66:../../tmk_core/common/keyboard.c **** void keyboard_setup(void)
  67:../../tmk_core/common/keyboard.c **** {
  16               		.loc 1 67 0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  68:../../tmk_core/common/keyboard.c ****     matrix_setup();
  22               		.loc 1 68 0
  23 0000 0C94 0000 		jmp matrix_setup
  24               	.LVL0:
  25               		.cfi_endproc
  26               	.LFE4:
  28               		.section	.text.keyboard_init,"ax",@progbits
  29               	.global	keyboard_init
  31               	keyboard_init:
  32               	.LFB5:
  69:../../tmk_core/common/keyboard.c **** }
  70:../../tmk_core/common/keyboard.c **** 
  71:../../tmk_core/common/keyboard.c **** void keyboard_init(void)
  72:../../tmk_core/common/keyboard.c **** {
  33               		.loc 1 72 0
  34               		.cfi_startproc
  35               	/* prologue: function */
  36               	/* frame size = 0 */
  37               	/* stack size = 0 */
  38               	.L__stack_usage = 0
  73:../../tmk_core/common/keyboard.c ****     timer_init();
  39               		.loc 1 73 0
  40 0000 0E94 0000 		call timer_init
  41               	.LVL1:
  74:../../tmk_core/common/keyboard.c ****     matrix_init();
  42               		.loc 1 74 0
  43 0004 0E94 0000 		call matrix_init
  44               	.LVL2:
  75:../../tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  76:../../tmk_core/common/keyboard.c ****     ps2_mouse_init();
  77:../../tmk_core/common/keyboard.c **** #endif
  78:../../tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  79:../../tmk_core/common/keyboard.c ****     serial_mouse_init();
  80:../../tmk_core/common/keyboard.c **** #endif
  81:../../tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  82:../../tmk_core/common/keyboard.c ****     adb_mouse_init();
  83:../../tmk_core/common/keyboard.c **** #endif
  84:../../tmk_core/common/keyboard.c **** 
  85:../../tmk_core/common/keyboard.c **** 
  86:../../tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
  87:../../tmk_core/common/keyboard.c ****     bootmagic();
  45               		.loc 1 87 0
  46 0008 0C94 0000 		jmp bootmagic
  47               	.LVL3:
  48               		.cfi_endproc
  49               	.LFE5:
  51               		.section	.text.keyboard_task,"ax",@progbits
  52               	.global	keyboard_task
  54               	keyboard_task:
  55               	.LFB6:
  88:../../tmk_core/common/keyboard.c **** #endif
  89:../../tmk_core/common/keyboard.c **** 
  90:../../tmk_core/common/keyboard.c **** #ifdef BACKLIGHT_ENABLE
  91:../../tmk_core/common/keyboard.c ****     backlight_init();
  92:../../tmk_core/common/keyboard.c **** #endif
  93:../../tmk_core/common/keyboard.c **** }
  94:../../tmk_core/common/keyboard.c **** 
  95:../../tmk_core/common/keyboard.c **** /*
  96:../../tmk_core/common/keyboard.c ****  * Do keyboard routine jobs: scan mantrix, light LEDs, ...
  97:../../tmk_core/common/keyboard.c ****  * This is repeatedly called as fast as possible.
  98:../../tmk_core/common/keyboard.c ****  */
  99:../../tmk_core/common/keyboard.c **** void keyboard_task(void)
 100:../../tmk_core/common/keyboard.c **** {
  56               		.loc 1 100 0
  57               		.cfi_startproc
  58 0000 4F92      		push r4
  59               	.LCFI0:
  60               		.cfi_def_cfa_offset 3
  61               		.cfi_offset 4, -2
  62 0002 5F92      		push r5
  63               	.LCFI1:
  64               		.cfi_def_cfa_offset 4
  65               		.cfi_offset 5, -3
  66 0004 6F92      		push r6
  67               	.LCFI2:
  68               		.cfi_def_cfa_offset 5
  69               		.cfi_offset 6, -4
  70 0006 7F92      		push r7
  71               	.LCFI3:
  72               		.cfi_def_cfa_offset 6
  73               		.cfi_offset 7, -5
  74 0008 8F92      		push r8
  75               	.LCFI4:
  76               		.cfi_def_cfa_offset 7
  77               		.cfi_offset 8, -6
  78 000a 9F92      		push r9
  79               	.LCFI5:
  80               		.cfi_def_cfa_offset 8
  81               		.cfi_offset 9, -7
  82 000c AF92      		push r10
  83               	.LCFI6:
  84               		.cfi_def_cfa_offset 9
  85               		.cfi_offset 10, -8
  86 000e BF92      		push r11
  87               	.LCFI7:
  88               		.cfi_def_cfa_offset 10
  89               		.cfi_offset 11, -9
  90 0010 DF92      		push r13
  91               	.LCFI8:
  92               		.cfi_def_cfa_offset 11
  93               		.cfi_offset 13, -10
  94 0012 EF92      		push r14
  95               	.LCFI9:
  96               		.cfi_def_cfa_offset 12
  97               		.cfi_offset 14, -11
  98 0014 FF92      		push r15
  99               	.LCFI10:
 100               		.cfi_def_cfa_offset 13
 101               		.cfi_offset 15, -12
 102 0016 0F93      		push r16
 103               	.LCFI11:
 104               		.cfi_def_cfa_offset 14
 105               		.cfi_offset 16, -13
 106 0018 1F93      		push r17
 107               	.LCFI12:
 108               		.cfi_def_cfa_offset 15
 109               		.cfi_offset 17, -14
 110 001a CF93      		push r28
 111               	.LCFI13:
 112               		.cfi_def_cfa_offset 16
 113               		.cfi_offset 28, -15
 114 001c DF93      		push r29
 115               	.LCFI14:
 116               		.cfi_def_cfa_offset 17
 117               		.cfi_offset 29, -16
 118 001e CDB7      		in r28,__SP_L__
 119 0020 DEB7      		in r29,__SP_H__
 120               	.LCFI15:
 121               		.cfi_def_cfa_register 28
 122 0022 2997      		sbiw r28,9
 123               	.LCFI16:
 124               		.cfi_def_cfa_offset 26
 125 0024 0FB6      		in __tmp_reg__,__SREG__
 126 0026 F894      		cli
 127 0028 DEBF      		out __SP_H__,r29
 128 002a 0FBE      		out __SREG__,__tmp_reg__
 129 002c CDBF      		out __SP_L__,r28
 130               	/* prologue: function */
 131               	/* frame size = 9 */
 132               	/* stack size = 24 */
 133               	.L__stack_usage = 24
 134               	.LVL4:
 101:../../tmk_core/common/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 102:../../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 103:../../tmk_core/common/keyboard.c ****     static matrix_row_t matrix_ghost[MATRIX_ROWS];
 104:../../tmk_core/common/keyboard.c **** #endif
 105:../../tmk_core/common/keyboard.c ****     static uint8_t led_status = 0;
 106:../../tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = 0;
 107:../../tmk_core/common/keyboard.c ****     matrix_row_t matrix_change = 0;
 108:../../tmk_core/common/keyboard.c **** 
 109:../../tmk_core/common/keyboard.c ****     matrix_scan();
 135               		.loc 1 109 0
 136 002e 0E94 0000 		call matrix_scan
 137               	.LVL5:
 138 0032 00E0      		ldi r16,lo8(matrix_prev.2413)
 139 0034 10E0      		ldi r17,hi8(matrix_prev.2413)
 140               	.LBB2:
 110:../../tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 141               		.loc 1 110 0
 142 0036 D12C      		mov r13,__zero_reg__
 143               	.LVL6:
 144               	.L9:
 111:../../tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 145               		.loc 1 111 0
 146 0038 8D2D      		mov r24,r13
 147 003a 0E94 0000 		call matrix_get_row
 148               	.LVL7:
 149 003e 4B01      		movw r8,r22
 150 0040 5C01      		movw r10,r24
 151               	.LVL8:
 112:../../tmk_core/common/keyboard.c ****         matrix_change = matrix_row ^ matrix_prev[r];
 152               		.loc 1 112 0
 153 0042 D801      		movw r26,r16
 154 0044 4D90      		ld r4,X+
 155 0046 5D90      		ld r5,X+
 156 0048 6D90      		ld r6,X+
 157 004a 7C90      		ld r7,X
 158               	.LVL9:
 113:../../tmk_core/common/keyboard.c ****         if (matrix_change) {
 159               		.loc 1 113 0
 160 004c 4814      		cp r4,r8
 161 004e 5904      		cpc r5,r9
 162 0050 6A04      		cpc r6,r10
 163 0052 7B04      		cpc r7,r11
 164 0054 01F4      		brne .+2
 165 0056 00C0      		rjmp .L4
 114:../../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 115:../../tmk_core/common/keyboard.c ****             if (has_ghost_in_row(r)) {
 116:../../tmk_core/common/keyboard.c ****                 /* Keep track of whether ghosted status has changed for
 117:../../tmk_core/common/keyboard.c ****                  * debugging. But don't update matrix_prev until un-ghosted, or
 118:../../tmk_core/common/keyboard.c ****                  * the last key would be lost.
 119:../../tmk_core/common/keyboard.c ****                  */
 120:../../tmk_core/common/keyboard.c ****                 if (debug_matrix && matrix_ghost[r] != matrix_row) {
 121:../../tmk_core/common/keyboard.c ****                     matrix_print();
 122:../../tmk_core/common/keyboard.c ****                 }
 123:../../tmk_core/common/keyboard.c ****                 matrix_ghost[r] = matrix_row;
 124:../../tmk_core/common/keyboard.c ****                 continue;
 125:../../tmk_core/common/keyboard.c ****             }
 126:../../tmk_core/common/keyboard.c ****             matrix_ghost[r] = matrix_row;
 127:../../tmk_core/common/keyboard.c **** #endif
 128:../../tmk_core/common/keyboard.c ****             if (debug_matrix) matrix_print();
 166               		.loc 1 128 0
 167 0058 8091 0000 		lds r24,debug_config
 168 005c 81FD      		sbrc r24,1
 169               		.loc 1 128 0 is_stmt 0 discriminator 1
 170 005e 0E94 0000 		call matrix_print
 171               	.LVL10:
 172               	.L5:
 110:../../tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 173               		.loc 1 110 0 is_stmt 1
 174 0062 F12C      		mov r15,__zero_reg__
 175 0064 E12C      		mov r14,__zero_reg__
 112:../../tmk_core/common/keyboard.c ****         if (matrix_change) {
 176               		.loc 1 112 0
 177 0066 D301      		movw r26,r6
 178 0068 C201      		movw r24,r4
 179 006a 8825      		eor r24,r8
 180 006c 9925      		eor r25,r9
 181 006e AA25      		eor r26,r10
 182 0070 BB25      		eor r27,r11
 183 0072 8E83      		std Y+6,r24
 184 0074 9F83      		std Y+7,r25
 185 0076 A887      		std Y+8,r26
 186 0078 B987      		std Y+9,r27
 187               	.LVL11:
 188               	.L8:
 189               	.LBB3:
 129:../../tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 130:../../tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 190               		.loc 1 130 0
 191 007a 4E81      		ldd r20,Y+6
 192 007c 5F81      		ldd r21,Y+7
 193 007e 6885      		ldd r22,Y+8
 194 0080 7985      		ldd r23,Y+9
 195 0082 0E2C      		mov r0,r14
 196 0084 00C0      		rjmp 2f
 197               		1:
 198 0086 7695      		lsr r23
 199 0088 6795      		ror r22
 200 008a 5795      		ror r21
 201 008c 4795      		ror r20
 202               		2:
 203 008e 0A94      		dec r0
 204 0090 02F4      		brpl 1b
 205 0092 40FF      		sbrs r20,0
 206 0094 00C0      		rjmp .L6
 207               	.LBB4:
 131:../../tmk_core/common/keyboard.c ****                     keyevent_t e = (keyevent_t){
 208               		.loc 1 131 0
 209 0096 E982      		std Y+1,r14
 210 0098 DA82      		std Y+2,r13
 132:../../tmk_core/common/keyboard.c ****                         .key = (keypos_t){ .row = r, .col = c },
 133:../../tmk_core/common/keyboard.c ****                         .pressed = (matrix_row & ((matrix_row_t)1<<c)),
 211               		.loc 1 133 0
 212 009a 412C      		mov r4,__zero_reg__
 213 009c 512C      		mov r5,__zero_reg__
 214 009e 3201      		movw r6,r4
 215 00a0 4394      		inc r4
 216 00a2 0E2C      		mov r0,r14
 217 00a4 00C0      		rjmp 2f
 218               		1:
 219 00a6 440C      		lsl r4
 220 00a8 551C      		rol r5
 221 00aa 661C      		rol r6
 222 00ac 771C      		rol r7
 223               		2:
 224 00ae 0A94      		dec r0
 225 00b0 02F4      		brpl 1b
 226 00b2 B301      		movw r22,r6
 227 00b4 A201      		movw r20,r4
 228 00b6 4821      		and r20,r8
 229 00b8 5921      		and r21,r9
 230 00ba 6A21      		and r22,r10
 231 00bc 7B21      		and r23,r11
 232 00be 81E0      		ldi r24,lo8(1)
 233 00c0 452B      		or r20,r21
 234 00c2 462B      		or r20,r22
 235 00c4 472B      		or r20,r23
 236 00c6 01F4      		brne .L7
 237 00c8 80E0      		ldi r24,0
 238               	.L7:
 131:../../tmk_core/common/keyboard.c ****                     keyevent_t e = (keyevent_t){
 239               		.loc 1 131 0
 240 00ca 8B83      		std Y+3,r24
 134:../../tmk_core/common/keyboard.c ****                         .time = (timer_read() | 1) /* time should not be 0 */
 241               		.loc 1 134 0
 242 00cc 0E94 0000 		call timer_read
 243               	.LVL12:
 244 00d0 8160      		ori r24,1
 131:../../tmk_core/common/keyboard.c ****                     keyevent_t e = (keyevent_t){
 245               		.loc 1 131 0
 246 00d2 782F      		mov r23,r24
 247 00d4 9D83      		std Y+5,r25
 248 00d6 8C83      		std Y+4,r24
 135:../../tmk_core/common/keyboard.c ****                     };
 136:../../tmk_core/common/keyboard.c ****                     action_exec(e);
 249               		.loc 1 136 0
 250 00d8 4981      		ldd r20,Y+1
 251 00da 5A81      		ldd r21,Y+2
 252 00dc 6B81      		ldd r22,Y+3
 253 00de 8D81      		ldd r24,Y+5
 254 00e0 0E94 0000 		call action_exec
 255               	.LVL13:
 137:../../tmk_core/common/keyboard.c ****                     hook_matrix_change(e);
 256               		.loc 1 137 0
 257 00e4 4981      		ldd r20,Y+1
 258 00e6 5A81      		ldd r21,Y+2
 259 00e8 6B81      		ldd r22,Y+3
 260 00ea 7C81      		ldd r23,Y+4
 261 00ec 8D81      		ldd r24,Y+5
 262 00ee 0E94 0000 		call hook_matrix_change
 263               	.LVL14:
 138:../../tmk_core/common/keyboard.c ****                     // record a processed key
 139:../../tmk_core/common/keyboard.c ****                     matrix_prev[r] ^= ((matrix_row_t)1<<c);
 264               		.loc 1 139 0
 265 00f2 F801      		movw r30,r16
 266 00f4 8081      		ld r24,Z
 267 00f6 9181      		ldd r25,Z+1
 268 00f8 A281      		ldd r26,Z+2
 269 00fa B381      		ldd r27,Z+3
 270 00fc 8425      		eor r24,r4
 271 00fe 9525      		eor r25,r5
 272 0100 A625      		eor r26,r6
 273 0102 B725      		eor r27,r7
 274 0104 8083      		st Z,r24
 275 0106 9183      		std Z+1,r25
 276 0108 A283      		std Z+2,r26
 277 010a B383      		std Z+3,r27
 278               	.L6:
 279               	.LVL15:
 280 010c FFEF      		ldi r31,-1
 281 010e EF1A      		sub r14,r31
 282 0110 FF0A      		sbc r15,r31
 283               	.LVL16:
 284               	.LBE4:
 129:../../tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 285               		.loc 1 129 0 discriminator 2
 286 0112 82E1      		ldi r24,18
 287 0114 E816      		cp r14,r24
 288 0116 F104      		cpc r15,__zero_reg__
 289 0118 01F0      		breq .+2
 290 011a 00C0      		rjmp .L8
 291               	.LVL17:
 292               	.L4:
 293               	.LBE3:
 110:../../tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 294               		.loc 1 110 0
 295 011c D394      		inc r13
 296               	.LVL18:
 297 011e 0C5F      		subi r16,-4
 298 0120 1F4F      		sbci r17,-1
 299 0122 96E0      		ldi r25,lo8(6)
 300 0124 D912      		cpse r13,r25
 301 0126 00C0      		rjmp .L9
 302               	.LBE2:
 140:../../tmk_core/common/keyboard.c **** 
 141:../../tmk_core/common/keyboard.c ****                     // This can miss stroke when scan matrix takes long like Topre
 142:../../tmk_core/common/keyboard.c ****                     // process a key per task call
 143:../../tmk_core/common/keyboard.c ****                     //goto MATRIX_LOOP_END;
 144:../../tmk_core/common/keyboard.c ****                 }
 145:../../tmk_core/common/keyboard.c ****             }
 146:../../tmk_core/common/keyboard.c ****         }
 147:../../tmk_core/common/keyboard.c ****     }
 148:../../tmk_core/common/keyboard.c ****     // call with pseudo tick event when no real key event.
 149:../../tmk_core/common/keyboard.c ****     action_exec(TICK);
 303               		.loc 1 149 0
 304 0128 8FEF      		ldi r24,lo8(-1)
 305 012a 8983      		std Y+1,r24
 306 012c 8A83      		std Y+2,r24
 307 012e 1B82      		std Y+3,__zero_reg__
 308 0130 0E94 0000 		call timer_read
 309               	.LVL19:
 310 0134 8160      		ori r24,1
 311 0136 782F      		mov r23,r24
 312 0138 9D83      		std Y+5,r25
 313 013a 8C83      		std Y+4,r24
 314 013c 4981      		ldd r20,Y+1
 315 013e 5A81      		ldd r21,Y+2
 316 0140 6B81      		ldd r22,Y+3
 317 0142 8D81      		ldd r24,Y+5
 318 0144 0E94 0000 		call action_exec
 319               	.LVL20:
 320               	.LDL1:
 150:../../tmk_core/common/keyboard.c **** 
 151:../../tmk_core/common/keyboard.c **** MATRIX_LOOP_END:
 152:../../tmk_core/common/keyboard.c **** 
 153:../../tmk_core/common/keyboard.c ****     hook_keyboard_loop();
 321               		.loc 1 153 0
 322 0148 0E94 0000 		call hook_keyboard_loop
 323               	.LVL21:
 154:../../tmk_core/common/keyboard.c **** 
 155:../../tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
 156:../../tmk_core/common/keyboard.c ****     // mousekey repeat & acceleration
 157:../../tmk_core/common/keyboard.c ****     mousekey_task();
 324               		.loc 1 157 0
 325 014c 0E94 0000 		call mousekey_task
 326               	.LVL22:
 158:../../tmk_core/common/keyboard.c **** #endif
 159:../../tmk_core/common/keyboard.c **** 
 160:../../tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
 161:../../tmk_core/common/keyboard.c ****     ps2_mouse_task();
 162:../../tmk_core/common/keyboard.c **** #endif
 163:../../tmk_core/common/keyboard.c **** 
 164:../../tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
 165:../../tmk_core/common/keyboard.c ****         serial_mouse_task();
 166:../../tmk_core/common/keyboard.c **** #endif
 167:../../tmk_core/common/keyboard.c **** 
 168:../../tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
 169:../../tmk_core/common/keyboard.c ****         adb_mouse_task();
 170:../../tmk_core/common/keyboard.c **** #endif
 171:../../tmk_core/common/keyboard.c **** 
 172:../../tmk_core/common/keyboard.c ****     // update LED
 173:../../tmk_core/common/keyboard.c ****     if (led_status != host_keyboard_leds()) {
 327               		.loc 1 173 0
 328 0150 0E94 0000 		call host_keyboard_leds
 329               	.LVL23:
 330 0154 9091 0000 		lds r25,led_status.2414
 331 0158 8917      		cp r24,r25
 332 015a 01F0      		breq .L3
 174:../../tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 333               		.loc 1 174 0
 334 015c 0E94 0000 		call host_keyboard_leds
 335               	.LVL24:
 336 0160 8093 0000 		sts led_status.2414,r24
 175:../../tmk_core/common/keyboard.c ****         if (debug_keyboard) dprintf("LED: %02X\n", led_status);
 337               		.loc 1 175 0
 338 0164 9091 0000 		lds r25,debug_config
 339 0168 9570      		andi r25,lo8(5)
 340 016a 9530      		cpi r25,lo8(5)
 341 016c 01F4      		brne .L11
 342               		.loc 1 175 0 is_stmt 0 discriminator 2
 343 016e 1F92      		push __zero_reg__
 344 0170 8F93      		push r24
 345 0172 80E0      		ldi r24,lo8(__c.2431)
 346 0174 90E0      		ldi r25,hi8(__c.2431)
 347 0176 9F93      		push r25
 348 0178 8F93      		push r24
 349 017a 0E94 0000 		call __xprintf
 350               	.LVL25:
 351 017e 0F90      		pop __tmp_reg__
 352 0180 0F90      		pop __tmp_reg__
 353 0182 0F90      		pop __tmp_reg__
 354 0184 0F90      		pop __tmp_reg__
 355               	.L11:
 176:../../tmk_core/common/keyboard.c ****         hook_keyboard_leds_change(led_status);
 356               		.loc 1 176 0 is_stmt 1
 357 0186 8091 0000 		lds r24,led_status.2414
 358               	/* epilogue start */
 177:../../tmk_core/common/keyboard.c ****     }
 178:../../tmk_core/common/keyboard.c **** }
 359               		.loc 1 178 0
 360 018a 2996      		adiw r28,9
 361 018c 0FB6      		in __tmp_reg__,__SREG__
 362 018e F894      		cli
 363 0190 DEBF      		out __SP_H__,r29
 364 0192 0FBE      		out __SREG__,__tmp_reg__
 365 0194 CDBF      		out __SP_L__,r28
 366 0196 DF91      		pop r29
 367 0198 CF91      		pop r28
 368 019a 1F91      		pop r17
 369 019c 0F91      		pop r16
 370 019e FF90      		pop r15
 371 01a0 EF90      		pop r14
 372 01a2 DF90      		pop r13
 373               	.LVL26:
 374 01a4 BF90      		pop r11
 375 01a6 AF90      		pop r10
 376 01a8 9F90      		pop r9
 377 01aa 8F90      		pop r8
 378               	.LVL27:
 379 01ac 7F90      		pop r7
 380 01ae 6F90      		pop r6
 381 01b0 5F90      		pop r5
 382 01b2 4F90      		pop r4
 176:../../tmk_core/common/keyboard.c ****         hook_keyboard_leds_change(led_status);
 383               		.loc 1 176 0
 384 01b4 0C94 0000 		jmp hook_keyboard_leds_change
 385               	.LVL28:
 386               	.L3:
 387               	/* epilogue start */
 388               		.loc 1 178 0
 389 01b8 2996      		adiw r28,9
 390 01ba 0FB6      		in __tmp_reg__,__SREG__
 391 01bc F894      		cli
 392 01be DEBF      		out __SP_H__,r29
 393 01c0 0FBE      		out __SREG__,__tmp_reg__
 394 01c2 CDBF      		out __SP_L__,r28
 395 01c4 DF91      		pop r29
 396 01c6 CF91      		pop r28
 397 01c8 1F91      		pop r17
 398 01ca 0F91      		pop r16
 399 01cc FF90      		pop r15
 400 01ce EF90      		pop r14
 401 01d0 DF90      		pop r13
 402               	.LVL29:
 403 01d2 BF90      		pop r11
 404 01d4 AF90      		pop r10
 405 01d6 9F90      		pop r9
 406 01d8 8F90      		pop r8
 407               	.LVL30:
 408 01da 7F90      		pop r7
 409 01dc 6F90      		pop r6
 410 01de 5F90      		pop r5
 411 01e0 4F90      		pop r4
 412 01e2 0895      		ret
 413               		.cfi_endproc
 414               	.LFE6:
 416               		.section	.text.keyboard_set_leds,"ax",@progbits
 417               	.global	keyboard_set_leds
 419               	keyboard_set_leds:
 420               	.LFB7:
 179:../../tmk_core/common/keyboard.c **** 
 180:../../tmk_core/common/keyboard.c **** void keyboard_set_leds(uint8_t leds)
 181:../../tmk_core/common/keyboard.c **** {
 421               		.loc 1 181 0
 422               		.cfi_startproc
 423               	.LVL31:
 424               	/* prologue: function */
 425               	/* frame size = 0 */
 426               	/* stack size = 0 */
 427               	.L__stack_usage = 0
 182:../../tmk_core/common/keyboard.c ****     led_set(leds);
 428               		.loc 1 182 0
 429 0000 0C94 0000 		jmp led_set
 430               	.LVL32:
 431               		.cfi_endproc
 432               	.LFE7:
 434               		.section	.progmem.data.__c.2431,"a",@progbits
 437               	__c.2431:
 438 0000 4C45 443A 		.string	"LED: %02X\n"
 438      2025 3032 
 438      580A 00
 439               		.section	.bss.led_status.2414,"aw",@nobits
 442               	led_status.2414:
 443 0000 00        		.zero	1
 444               		.section	.bss.matrix_prev.2413,"aw",@nobits
 447               	matrix_prev.2413:
 448 0000 0000 0000 		.zero	24
 448      0000 0000 
 448      0000 0000 
 448      0000 0000 
 448      0000 0000 
 449               		.text
 450               	.Letext0:
 451               		.file 2 "c:\\avr-gcc-7.2.0-x64-mingw\\avr\\include\\stdint.h"
 452               		.file 3 "../../tmk_core/common/keyboard.h"
 453               		.file 4 "../../tmk_core/common/matrix.h"
 454               		.file 5 "../../tmk_core/common/host.h"
 455               		.file 6 "../../tmk_core/common/timer.h"
 456               		.file 7 "../../tmk_core/common/avr/xprintf.h"
 457               		.file 8 "../../tmk_core/common/debug.h"
 458               		.file 9 "../../tmk_core/common/command.h"
 459               		.file 10 "../../tmk_core/common/mousekey.h"
 460               		.file 11 "../../tmk_core/common/led.h"
 461               		.file 12 "../../tmk_core/common/action.h"
 462               		.file 13 "../../tmk_core/common/hook.h"
 463               		.file 14 "../../tmk_core/common/bootmagic.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keyboard.c
C:\cygwin\tmp\ccpMlZYW.s:2      *ABS*:000000000000003e __SP_H__
C:\cygwin\tmp\ccpMlZYW.s:3      *ABS*:000000000000003d __SP_L__
C:\cygwin\tmp\ccpMlZYW.s:4      *ABS*:000000000000003f __SREG__
C:\cygwin\tmp\ccpMlZYW.s:5      *ABS*:0000000000000000 __tmp_reg__
C:\cygwin\tmp\ccpMlZYW.s:6      *ABS*:0000000000000001 __zero_reg__
C:\cygwin\tmp\ccpMlZYW.s:13     .text.keyboard_setup:0000000000000000 keyboard_setup
C:\cygwin\tmp\ccpMlZYW.s:31     .text.keyboard_init:0000000000000000 keyboard_init
C:\cygwin\tmp\ccpMlZYW.s:54     .text.keyboard_task:0000000000000000 keyboard_task
C:\cygwin\tmp\ccpMlZYW.s:447    .bss.matrix_prev.2413:0000000000000000 matrix_prev.2413
C:\cygwin\tmp\ccpMlZYW.s:442    .bss.led_status.2414:0000000000000000 led_status.2414
C:\cygwin\tmp\ccpMlZYW.s:437    .progmem.data.__c.2431:0000000000000000 __c.2431
C:\cygwin\tmp\ccpMlZYW.s:419    .text.keyboard_set_leds:0000000000000000 keyboard_set_leds

UNDEFINED SYMBOLS
matrix_setup
timer_init
matrix_init
bootmagic
matrix_scan
matrix_get_row
debug_config
matrix_print
timer_read
action_exec
hook_matrix_change
hook_keyboard_loop
mousekey_task
host_keyboard_leds
__xprintf
hook_keyboard_leds_change
led_set
__do_clear_bss
